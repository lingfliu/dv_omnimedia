Hi3531-Hi3532 PCIe级联业务的启动，应用程序需要遵循如下步骤，来启动业务。（更详尽信息请参考《Hi3531／Hi3532 PCIE级联应用指南》）

主片：
1. 打开pcie 消息通信的设备节点 /dev/mcc_userdev；

    fd = open("/dev/mcc_userdev", O_RDWR);
    if (fd<=0)
    {
        printf("open mcc dev fail\n");
        return -1;
    }

2. 请向给设备发送 HI_MCC_IOC_ATTR_INIT 命令，以完成相关的初始化：

    if (ioctl(fd, HI_MCC_IOC_ATTR_INIT, &attr))
    {
            printf("initialization for attr failed!\n");
            return -1;
    }

3. 对主片而言，完成上面操作之后，就可以发 HI_MCC_IOC_GET_REMOTE_ID 命令，
获取所有处于连接状态的从设备：
    if (ioctl(fd, HI_MCC_IOC_GET_REMOTE_ID, &attr))
    {
        printf("get pci remote id fail \n");
        return -1;
    }

注：attr.remote_id[i] 对应着每一个从设备。

4. 完成上面动作之后，在主片和从片进行任何通信之前，需要和每一个从片各
进行一次握手（一次就够了），以确保从片已经处于准备状态，并为该从设备分配相应的资源。
比如和设备 n 进行握手:
    attr.target_id = n;
    while (ioctl(fd, HI_MCC_IOC_CHECK, &attr))
    {
        usleep(0);
    }

5. 完成握手之后，就可以打开各个进行通信的端口了：
比如打开设备n的第m个端口：

    attr.target_id = n;
    attr.port      = m;
    attr.priority  = 0;
    ret = ioctl(fd, HI_MCC_IOC_CONNECT, &attr);
    if (-1 == ret)
    {
        printf("open target[0x%x] [0x%x] failed!\n", n, m);

    }

完成以上初始化工作之后，主片就可以和该从设备的某个已经打开的端口进行通信了。


从片：

1. 打开pcie 消息通信的设备节点 /dev/mcc_userdev；

    fd = open("/dev/mcc_userdev", O_RDWR);
    if (fd<=0)
    {
        printf("open mcc dev fail\n");
        return -1;
    }

2. 请向给设备发送 HI_MCC_IOC_ATTR_INIT 命令，以完成相关的初始化：

    if (ioctl(fd, HI_MCC_IOC_ATTR_INIT, &attr))
    {
            printf("initialization for attr failed!\n");
            return -1;
    }

3. 从设备可以是自己启动，可以是由主片启动，或者“从设备”本来就没用于级联，在设备真正以
从设备的身份打开端口或者发送信息之前，需要先和主片握一下手，确认自己的身份、和主片的连接状态，
并为主从通信分配相应的资源：
    while (ioctl(s32MsgFd, HI_MCC_IOC_CHECK, &attr))
    {
        usleep(0);
    }

4. 在和主片握手之后，从片可以获取主片为其分配的编号。
local_id = ioctl(fd, HI_MCC_IOC_GET_LOCAL_ID, &attr);
返回值就是从设备的id号。

5. 从片可以打开某个端口，以便后续和主片进行通信：
比如打开端口m（注意从设备的对端是主设备，其id永远为0）：

    attr.target_id = 0;
    attr.port      = m;
    attr.priority  = 0;
    if (ioctl(fd, HI_MCC_IOC_CONNECT, &attr))
    {
        printf("open port 0x%x failed, \n", attr.port);
        return -1;
    }


请注意主片和从片的红色字体部分是相互对应的，其在整个初始化流程中具有重要的作用，不能提前也不能后移。
